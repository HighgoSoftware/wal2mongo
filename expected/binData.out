\set VERBOSITY terse
-- predictability
SET synchronous_commit = on;
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'wal2mongo');
 ?column? 
----------
 init
(1 row)

-- UUID
CREATE TABLE tbl_uuid ( id serial PRIMARY KEY, a_uuid UUID NOT NULL );
INSERT INTO tbl_uuid (a_uuid) VALUES('47deacb1-3ad0-4a0e-8254-9ad3f589c9f3') ;
UPDATE tbl_uuid SET a_uuid = 'e7d8e462-12cc-49dc-aac2-2b5dccdabeda' WHERE id=1;
DELETE FROM tbl_uuid WHERE id = 1;
TRUNCATE TABLE tbl_uuid;
-- BYTEA
CREATE TABLE tbl_bytea ( id serial PRIMARY KEY, a_bytea bytea NOT NULL );
ALTER TABLE tbl_bytea REPLICA IDENTITY FULL;
INSERT INTO tbl_bytea(a_bytea) SELECT 'abc \153\154\155 \052\251\124'::bytea RETURNING a_bytea;
         a_bytea          
--------------------------
 \x616263206b6c6d202aa954
(1 row)

UPDATE tbl_bytea SET a_bytea = SELECT '\134'::bytea RETURNING a_bytea;
ERROR:  syntax error at or near "SELECT" at character 32
DELETE FROM tbl_bytea WHERE id = 1;
TRUNCATE TABLE tbl_bytea;
-- peek changes according to action configuration
SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'regress', 'true');
                                                                   data                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.insertOne( { id: NumberInt("1"), a_uuid: UUID("47deacb1-3ad0-4a0e-8254-9ad3f589c9f3") } );
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.updateOne( { id: NumberInt("1") }, { $set:  { id: NumberInt("1"), a_uuid: UUID("e7d8e462-12cc-49dc-aac2-2b5dccdabeda") } } );
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.deleteOne( { id: NumberInt("1") } );
 use mycluster_mydb_regression_slot;
 db.tbl_bytea.insertOne( { id: NumberInt("1"), a_bytea: HexData(0, "616263206b6c6d202aa954") } );
 use mycluster_mydb_regression_slot;
 db.tbl_bytea.deleteOne( { id: NumberInt("1") } );
(10 rows)

-- get changes according to action configuration
SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'regress', 'true');
                                                                   data                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.insertOne( { id: NumberInt("1"), a_uuid: UUID("47deacb1-3ad0-4a0e-8254-9ad3f589c9f3") } );
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.updateOne( { id: NumberInt("1") }, { $set:  { id: NumberInt("1"), a_uuid: UUID("e7d8e462-12cc-49dc-aac2-2b5dccdabeda") } } );
 use mycluster_mydb_regression_slot;
 db.tbl_uuid.deleteOne( { id: NumberInt("1") } );
 use mycluster_mydb_regression_slot;
 db.tbl_bytea.insertOne( { id: NumberInt("1"), a_bytea: HexData(0, "616263206b6c6d202aa954") } );
 use mycluster_mydb_regression_slot;
 db.tbl_bytea.deleteOne( { id: NumberInt("1") } );
(10 rows)

-- drop tables
DROP TABLE tbl_uuid;
DROP TABLE tbl_bytea;
SELECT 'end' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 end
(1 row)

