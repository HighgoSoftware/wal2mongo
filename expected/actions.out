\set VERBOSITY terse
-- predictability
SET synchronous_commit = on;
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'wal2mongo');
 ?column? 
----------
 init
(1 row)

-- actions
CREATE TABLE testing (a integer primary key);
INSERT INTO testing (a) VALUES(200);
UPDATE testing SET a = 500 WHERE a = 200;
DELETE FROM testing WHERE a = 500;
TRUNCATE TABLE testing;
-- peek changes according to action configuration
SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'insert');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'update');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'delete');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'truncate');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'insert, update, delete, truncate');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

-- peek changes with default action configuraiton
SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL);
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

-- peek changes with several configuration parameter combinations
SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'include_cluster_name', 'true');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'include_timestamp', 'true');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'skip_empty_xacts', 'true');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'only_local', 'true');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'use_transaction', 'true');
                          data                           
---------------------------------------------------------
 use regression_slot;                                   +
 db.testing.insertOne( { a:200 } )
 use regression_slot;                                   +
 db.testing.updateOne( { a:200 }, { $set:  { a:500 } } )
 use regression_slot;                                   +
 db.testing.deleteOne( { a:500 } )
(3 rows)

-- peek changes with invalid actions
SELECT data FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'actions', 'insert, xxx, delete, xxx');
ERROR:  could not parse value "xxx" for parameter "actions"
DROP TABLE testing;
SELECT 'end' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 end
(1 row)

